<?xml version="1.0" encoding="UTF-8"?>
<project name="Workspace Preview System" default="build">

  <property name="drush" value="${project.basedir}/bin/drush" />
  <property name="composer" value="/usr/local/bin/composer" />
  <property name="npm" value="/usr/local/bin/npm" />
  <property name="rsync" value="/usr/bin/rsync" />
  <property name="db.type" value="mysql" />
  <property name="db.host" value="localhost" />
  <property name="db.user" value="root" />
  <property name="db.password" value="" />
  <property name="db.database" value="workspace_preview_system" />
  <property name="db.url" value="${db.type}://${db.user}:${db.password}@${db.host}/${db.database}" />
  <property name="docroot" value="docroot" />
  <property name="profile" value="${docroot}/profiles/workspace_preview_system" />
  <property name="site" value="${docroot}/sites/default" />

  <!-- Finds Composer, NPM, and rsync. -->
  <target name="env">
    <if>
      <not>
        <available file="${drush}" property="drush.exists" />
      </not>
      <then>
        <exec command="which drush" outputProperty="drush" />
      </then>
    </if>
    <exec command="which composer" outputProperty="composer" />
    <exec command="which npm" outputProperty="npm" />
    <exec command="which rsync" outputProperty="rsync" />
  </target>

  <!-- Syncs the profile into the Drupal code base. -->
  <target name="push" depends="env">
    <!-- Create the destination if it doesn't exist. -->
    <mkdir dir="${profile}" />

    <!-- rsync the profile, excluding developer flotsam. -->
    <filesync destinationDir="${profile}" rsyncPath="${rsync}" sourceDir="." verbose="false" exclude=".idea,bin,build.xml,.git,.gitignore,${docroot},karma.conf.js,*.make,node_modules,.travis.yml,vendor" />

    <!-- JS libraries and contrib modules were copied over by the file sync. -->
    <delete dir="modules/contrib" failonerror="true" />
  </target>

  <target name="pull" depends="env">
    <filesync destinationDir="." rsyncPath="${rsync}" sourceDir="${profile}/" verbose="false" exclude="libraries,modules/contrib" />
  </target>

  <!-- Builds a code base using Composer. -->
  <target name="build" depends="env">
    <composer command="drupal-scaffold" composer="${composer}" />
    <phingcall target="push" />
  </target>

  <!-- Installs wps and sets it up for development. -->
  <target name="install" depends="env">
    <exec command="${drush} site-install workspace_preview_system --yes --account-pass=admin --db-url=${db.url}" dir="${docroot}" />
    <exec command="${drush} config-set system.performance css.preprocess 0 --yes --format=boolean" dir="${docroot}" />
    <exec command="${drush} config-set system.performance js.preprocess 0 --yes --format=boolean" dir="${docroot}" />
    <exec command="${drush} config-set system.logging error_level all --yes" dir="${docroot}" />
  </target>

  <!-- Destroys the Drupal installation, but leaves the code base intact. -->
  <target name="uninstall">
    <if>
      <available file="${site}" property="site.exists" />
      <then>
        <chmod file="${site}" mode="0755" />
        <delete failonerror="true" includeemptydirs="true">
          <fileset dir="${site}">
            <include name="settings.php" />
            <include name="files/**" />
          </fileset>
        </delete>
      </then>
    </if>
    <!-- TODO: Delete the database and recreate it? -->
  </target>

  <!-- Destroys the installed code base. -->
  <target name="destroy" depends="uninstall">
    <delete failonerror="true" includeemptydirs="true">
      <fileset dir="." defaultexcludes="false">
        <include name="bin/**" />
        <include name="${docroot}/**" />
        <include name="node_modules/**" />
        <include name="vendor/**" />
      </fileset>
    </delete>
  </target>

</project>
